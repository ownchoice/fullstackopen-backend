{"version":3,"sources":["components/SearchContact.js","components/AddNewContact.js","components/Contact.js","components/ContactList.js","services/contacts.js","components/Notification.js","components/App.js","index.js"],"names":["SearchContact","filter","handleFilter","value","onChange","AddNewContact","props","onSubmit","addName","newName","handleNameChange","newPhonenumber","handlePhonenumberChange","type","Contact","person","deleteHandler","name","number","onClick","ContactList","contactList","map","key","baseUrl","getContacts","a","axios","get","response","data","addContact","newContact","post","then","updateContact","id","updatedContact","put","deleteContact","delete","Notification","message","style","show","App","useState","persons","setPersons","successStyle","background","color","fontStyle","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","notificationMessage","setNotificationMessage","notificationStyle","setNotificationStyle","Date","now","notificationLastUpdate","setLastUpdate","useEffect","timer","setTimeout","clearTimeout","sendNotification","getContactsHook","contactService","setNewName","setNewPhonenumber","newSearchFilter","setNewSearchFilter","event","target","preventDefault","some","element","window","confirm","find","catch","error","console","log","concat","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65985a3a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SearchContact = ( { filter, handleFilter } ) => {\r\n  return (\r\n    <p>Filter shown with: <input value={filter} onChange={handleFilter}></input></p>\r\n  )\r\n}\r\n\r\nexport default SearchContact","import React from 'react'\r\n\r\nconst AddNewContact = (props) => {\r\n  return (\r\n    <>\r\n    <h2>Add a new contact</h2>\r\n    <form onSubmit={props.addName}>\r\n      <p>\r\n        Name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </p>\r\n      <p>Number: <input value={props.newPhonenumber} onChange={props.handlePhonenumberChange} /></p>\r\n      <p>\r\n        <button type=\"submit\">Add</button>\r\n      </p>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewContact","import React from 'react'\r\n\r\nconst Contact = ( { person, deleteHandler } ) => {\r\n  return (\r\n  <p>{ person.name } { person.number } <button onClick={() => {deleteHandler(person)}}>Delete</button></p>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst ContactList = (props) => {\r\n  return (\r\n    props.contactList.map(person => <Contact key={person.name} person={person} deleteHandler={props.deleteHandler} />)\r\n  )\r\n}\r\n\r\nexport default ContactList","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getContacts = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addContact = (newContact) => {\r\n  const request = axios.post(baseUrl, newContact)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (id, updatedContact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedContact)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getContacts, addContact, updateContact, deleteContact }","import React from 'react'\r\n\r\nconst Notification = ({ message, style, show }) => {\r\n  if (message === null || message === '') {\r\n    return null\r\n  }\r\n  return(\r\n    <div style={style}>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport SearchContact from './SearchContact'\r\nimport AddNewContact from './AddNewContact'\r\nimport ContactList from './ContactList'\r\nimport contactService from '../services/contacts'\r\nimport Notification from './Notification'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([\r\n    { name: 'Arto Hellas', number: '040-123456' },\r\n    // { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n    // { name: 'Dan Abramov', number: '12-43-234345' },\r\n    // { name: 'Mary Poppendieck', number: '39-23-6423122' }\r\n  ])\r\n\r\n  const successStyle = {\r\n    background: 'lightgreen',\r\n    color: 'green',\r\n    fontStyle: 'bold',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n  const errorStyle = {\r\n    ...successStyle,\r\n    color: 'red',\r\n    background: 'lightsalmon',\r\n  }\r\n  const [notificationMessage, setNotificationMessage] = useState('')\r\n  const [notificationStyle, setNotificationStyle] = useState(successStyle)\r\n  const [notificationLastUpdate, setLastUpdate] = useState(Date.now())\r\n  \r\n\r\n  const cambioNotificacion = () => {\r\n    const timer = setTimeout(() => {\r\n      setNotificationMessage('')\r\n      // console.log('Limpiar notificación');\r\n    }, 5000)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n      // console.log('Limpiar timer');\r\n    }\r\n  }\r\n  useEffect(cambioNotificacion, [notificationLastUpdate])\r\n  \r\n  const sendNotification = (message, style) => {\r\n    setNotificationStyle(style)\r\n    setNotificationMessage(message)\r\n    setLastUpdate(Date.now())\r\n    // console.log('Renovar notificación');\r\n  }\r\n\r\n  const getContactsHook = () => {\r\n    contactService.getContacts().then(response => {\r\n      setPersons(response)\r\n    })\r\n  }\r\n  useEffect(getContactsHook, [])\r\n  \r\n  const [ newName, setNewName ] = useState('')\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    if (persons.some( element => element.name === newName )) {\r\n      if (window.confirm(`${newName} is already in the phonebook. Update it?`)) {\r\n        contactService\r\n        .updateContact(persons.find( element => element.name === newName ).id, { name: newName, number: newPhonenumber }).then(response => {\r\n          getContactsHook()\r\n          sendNotification('Contact updated successfully.', successStyle)\r\n        })\r\n        .catch(error => {\r\n          sendNotification('There was an error. Nothing was updated. ' + error.response.data.error, errorStyle)\r\n          console.log(error.response.data.error)\r\n          getContactsHook()\r\n        })\r\n      }\r\n    } else {\r\n      contactService\r\n        .addContact(\r\n          { name: newName, number: newPhonenumber }\r\n        )\r\n        .then(\r\n          response => {\r\n            setPersons(persons.concat(response))\r\n            sendNotification('Contact added successfully.', successStyle)\r\n          }\r\n        )\r\n        .catch(error => {\r\n          sendNotification('There was an error. Contact was not added. ' + error.response.data.error, errorStyle)\r\n          console.log(error.response.data.error)\r\n        })\r\n    }\r\n    setNewName('')\r\n    setNewPhonenumber('')\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const [ newPhonenumber, setNewPhonenumber ] = useState('')\r\n\r\n  const handlePhonenumberChange = (event) => {\r\n    setNewPhonenumber(event.target.value)\r\n  }\r\n\r\n  const [ newSearchFilter, setNewSearchFilter ] = useState('')\r\n  const handleNewSearchFilter = (event) => {\r\n    setNewSearchFilter(event.target.value)\r\n  }\r\n\r\n  const deleteHandler = (person) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      contactService.deleteContact(person.id).then(response => {\r\n        getContactsHook()\r\n        sendNotification('Contact deleted.', errorStyle)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} style={notificationStyle} />\r\n      <SearchContact filter={newSearchFilter} handleFilter={handleNewSearchFilter} />\r\n      <AddNewContact addName={addName} newName={newName} handleNameChange={handleNameChange} newPhonenumber={newPhonenumber} handlePhonenumberChange={handlePhonenumberChange} />\r\n      <h2>Numbers</h2>\r\n      <ContactList contactList={ persons.filter(person => person.name.toLowerCase().includes(newSearchFilter)) } deleteHandler={deleteHandler} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}